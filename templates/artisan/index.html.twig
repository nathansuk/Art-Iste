{% extends 'base.html.twig' %}

{% block title %}{{ site_name }} : {{ artisan.user.firstName }} {{ artisan.user.lastName }}{% endblock %}

{% block body %}

    <div class="artisan-top" style="background-image: url({{ asset('assets/upload/artisans/' ~ artisan.coverName) }});">

        <div class="center-top">
        <h1>{{ artisan.vitrineName }}</h1>
            <h2>{{ artisan.category.name }}</h2>
        </div>

    </div>
<div class="page-content">

    <div class="artisan-container">

    <div class="artisan-container--leftpart">

        <div class="artisan-info-box w-100 bdr-10">

            <div class="artisan-profile-pic" style="background-image: url({{ asset('assets/upload/profile_pics/' ~ artisan.user.userSettings.imageName) }});"></div>

            <div class="artisan-info-box--content">
                <h2>À propos</h2>
                <h3 class="artisan-location">{{ artisan.user.firstName }} {{ artisan.user.lastName }}</h3>
                <h2 class="artisan-location">Localisation : Paris - 75019</h2>
                <p>{{ artisan.vitrineDesc }}</p>
                <div class="artisan-taglist">
                    <span>{{ artisan.category.name }}</span>
                </div>
            </div>
        </div>


    </div>


    <div class="artisan-container--rightpart">

        <div class="user-actions-list">
            <button class="user-artisans-actions"><i class="fi-rr-user-time"></i> Prendre rendez-vous</button>
            <button class="user-artisans-actions"><i class="fi-rr-list-check"></i> Voir les prestations et les prix</button>
        </div>

        <h1 style="margin-top: 30px;">Contact</h1>
        <div class="contact-artisan">

            <div class="proaddress-infos--box bdr-10 w-100">
                <div class="box-content">
                    <div class="rounded-bgr-icon primary">
                        <i class="fi-rr-envelope"></i>
                    </div>
                    <span style="color: #A6DCEF">Adresse mail :</span>
                    <span style="color: #A6DCEF">{{ artisan.user.username }}</span>
                </div>
            </div>

            <div class="proaddress-infos--box bdr-10 w-100">
                <div class="box-content">
                    <div class="rounded-bgr-icon primary">
                        <i class="fi-rr-smartphone"></i>
                    </div>
                    <span style="color: #A6DCEF">Téléphone :</span>
                    <span style="color: #A6DCEF">{{ artisan.phoneNumber }}</span>
                </div>
            </div>

        </div>

    </div>


    </div>



    <h1 style="margin-top: 30px">Localisation et périmètre d'activité</h1>

    <div class="proaddress-infos w-100">
        <div style="display: flex; flex-direction: column; width: 49%;">
        {% if artisan.atHome %}
            <div class="proaddress-infos--box w-100 bdr-10">
                <div class="box-content">
                    <div class="rounded-bgr-icon success">
                        <i class="fi-rr-check"></i>
                    </div>
                    <span style="color: #71e5ad">Le prestataire exerce à domicile</span>
                </div>
            </div>
        {% else %}
            <div class="proaddress-infos--box w-100 bdr-10">
                <div class="box-content">
                    <div class="rounded-bgr-icon danger">
                        <i class="fi-rr-cross-small"></i>
                    </div>
                    <span style="color: #ec7373">Le prestataire n'exerce pas à domicile</span>
                </div>
            </div>
        {% endif %}
        {% if artisan.canMove %}
            <div class="proaddress-infos--box w-100 bdr-10">
                <div class="box-content">
                    <div class="rounded-bgr-icon success">
                        <i class="fi-rr-check"></i>
                    </div>
                    <span style="color: #71e5ad">Le prestataire peut se déplacer à : {{ artisan.activityPerimeter }} km</span>
                </div>
            </div>
        {% else %}
            <div class="proaddress-infos--box w-100 bdr-10">
                <div class="box-content">
                    <div class="rounded-bgr-icon danger">
                        <i class="fi-rr-cross-small"></i>
                    </div>
                    <span style="color: #ec7373">Le prestataire ne se déplace pas</span>
                </div>
            </div>
        {% endif %}
        </div>
        <div onload="initialize()" id="map" style="width: 50%; height: 300px; border-radius: 10px" data-can-move="{{ artisan.canMove }}" data-activity-perimeter="{{ artisan.activityPerimeter }}"></div>
        <div id="floating-panel">
            <input id="address" type="textbox" value="{{ artisan.adressePro }}" hidden>
        </div>
    </div>





    <h1 style="margin-top: 30px">Book photo</h1>
    <div class="book-photo">

        {% for photos in artisan.getArtisanPhotos|reverse %}
            {% if photos.valid %}
            <div class="photo-box" style="background-image: url({{ asset('assets/upload/book_photo/' ~ photos.imageName) }});"></div>
            {% endif %}
        {% endfor %}

        {% for i in 0..10 %}
        {% endfor %}

    </div>

</div>
{% endblock %}

{% block javascripts %}

    <script src="https://maps.googleapis.com/maps/api/js?key={{ google_api_key }}&callback=initialize&libraries=&v=weekly" async></script>

    <script>
        let geocoder;
        let map;

        function initialize() {
            geocoder = new google.maps.Geocoder();
            var latlng = new google.maps.LatLng(-34.397, 150.644);
            var mapOptions = {
                zoom: 10,
                center: latlng
            }
            map = new google.maps.Map(document.getElementById('map'), mapOptions);
            codeAddress();
        }

        function codeAddress() {

            var address = document.getElementById('address').value;
            var carte = document.querySelector('#map');
            var canMove = carte.dataset.canMove;
            var activityPerimeter = carte.dataset.activityPerimeter

            geocoder.geocode( { 'address': address}, function(results, status) {
                if (status == 'OK') {
                    map.setCenter(results[0].geometry.location);
                    var marker = new google.maps.Marker({
                        map: map,
                        position: results[0].geometry.location
                    });

                    if(canMove){
                        var circle = new google.maps.Circle({
                            map: map,
                            radius: activityPerimeter * 1000,    // converting km from activityPerimeter to meters
                            fillColor: '#fc4040',
                            strokeWeight: 3,
                            strokeColor: '#bf0000'
                        });
                    }

                    circle.bindTo('center', marker, 'position');
                } else {
                    alert('Geocode was not successful for the following reason: ' + status);
                }
            });
        }
    </script>

{% endblock %}
